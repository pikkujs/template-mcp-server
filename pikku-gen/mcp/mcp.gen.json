{
  "tools": [
    {
      "name": "sayHello",
      "description": "Greet someone with a friendly hello message",
      "parameters": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "This provides the structure needed for typescript to be aware of RPCs and their return types",
        "definitions": {}
      },
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "text"
          ],
          "additionalProperties": false
        },
        "definitions": {}
      }
    },
    {
      "name": "disableTool",
      "description": "Disable a tool by name",
      "parameters": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "definitions": {}
      },
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "text"
          ],
          "additionalProperties": false
        },
        "definitions": {}
      }
    },
    {
      "name": "calculate",
      "description": "Perform basic mathematical operations (add, subtract, multiply, divide)",
      "parameters": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "add",
              "subtract",
              "multiply",
              "divide"
            ]
          },
          "a": {
            "type": "number"
          },
          "b": {
            "type": "number"
          }
        },
        "required": [
          "operation",
          "a",
          "b"
        ],
        "additionalProperties": false,
        "definitions": {}
      },
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "text"
          ],
          "additionalProperties": false
        },
        "definitions": {}
      }
    }
  ],
  "resources": [
    {
      "uri": "getStaticResource",
      "name": "getStaticResource",
      "description": "Gets a static resource with predefined data",
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uri": {},
            "text": {
              "type": "string"
            }
          },
          "required": [
            "uri",
            "text"
          ],
          "additionalProperties": false
        },
        "definitions": {}
      }
    },
    {
      "uri": "getUserInfo/{userId}",
      "name": "getUserInfo/{userId}",
      "description": "Retrieve user information by user ID",
      "parameters": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "userId"
        ],
        "additionalProperties": false,
        "definitions": {}
      },
      "returns": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "required": [
            "uri",
            "text"
          ],
          "additionalProperties": false
        },
        "definitions": {}
      }
    }
  ],
  "prompts": [
    {
      "name": "getStaticResource",
      "description": "A static prompt that returns a predefined message",
      "arguments": []
    },
    {
      "name": "dynamicPromptGenerator",
      "description": "Generate educational content with progressive complexity and optional examples",
      "arguments": [
        {
          "name": "topic",
          "description": "topic parameter",
          "required": true
        },
        {
          "name": "complexity",
          "description": "complexity parameter",
          "required": true
        },
        {
          "name": "includeExamples",
          "description": "includeExamples parameter",
          "required": false
        }
      ]
    }
  ]
}